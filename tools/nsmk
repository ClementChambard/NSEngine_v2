#!/bin/bash

# get the executable's path
NSMK_PATH="$(dirname -- "${BASH_SOURCE[0]}")"
NSMK_ARGS=("$@")

source $NSMK_PATH/nsmk_git.sh

# executable is in $NSENGINE_DEV_PATH/tools
NSENGINE_DEV_PATH="$(dirname -- $NSMK_PATH)"

NSENGINE_BUILD_DIR="build"
NSENGINE_BUILD_PATH="$NSENGINE_DEV_PATH/$NSENGINE_BUILD_DIR"

cd $NSENGINE_DEV_PATH

main() {
  cd $NSENGINE_BUILD_DIR > /dev/null 2> /dev/null
  if [ $? -ne 0 ]; then
    echo -e "\e[31mNOT CONFIGURED\e[0m"
    exit 1
  fi
  cmake .. && ninja

  if [ $? -ne 0 ]; then
    echo -e "\e[31mCOMPILING ERROR\e[0m"
    exit 1
  else
    echo -e "\e[33mCOMPILING SUCCESS\e[0m"
  fi

  cd ..
  ./tools/post-build.sh

  if [ $? -ne 0 ]; then
    echo -e "\e[31mPOSTBUILD ERROR\e[0m"
    exit $?
  else
    echo -e "\e[33mPOSTBUILD SUCCESS\e[0m"
  fi
}

if [ $# -eq 0 ]; then
  main
elif [ "$1" = "git" ]; then
  git_cmd "${NSMK_ARGS[@]:1}"
  exit $?
elif [ $# -eq 1 ]; then

  if [ "$1" = "configure" ]; then
    mkdir -p $NSENGINE_BUILD_DIR && cd $NSENGINE_BUILD_DIR && cmake -GNinja ..
    exit $?
  elif [ "$1" = "vim" ]; then
    nvim
    exit $?
  elif [ "$1" = "edit" ]; then
    nvim tools/nsmk
    exit $?
  elif [ "$1" = "run" ]; then
    main
    cd $NSENGINE_BUILD_DIR
    testbed/testbed
    exit $?
  elif [ "$1" = "debug" ]; then
    main
    cd $NSENGINE_BUILD_DIR
    gdb testbed/testbed
    exit $?
  elif [ "$1" = "test" ]; then
    main
    cd $NSENGINE_BUILD_DIR
    tests/tests
    exit $?
  elif [ "$1" = "cleanall" ]; then
    rm -rf $NSENGINE_BUILD_DIR
    exit $?
  elif [ "$1" = "clean" ]; then
    cd $NSENGINE_BUILD_DIR > /dev/null 2> /dev/null && ninja clean
    exit $?
  fi
else
  echo "Usage: nsmk <command>"
  exit 1
fi
