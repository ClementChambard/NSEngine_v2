#!/bin/bash

# get the executable's path
NSMK_PATH="$(dirname -- "${BASH_SOURCE[0]}")"
NSMK_ARGV=("$@")
NSMK_ARGC=$#
NSMK_EXENAME="nsmk"
NSMK_IS_MAINFILE=$([ "$(basename -- "$0")" = "$NSMK_EXENAME" ] && echo 1 || echo 0)

# executable is in $NSENGINE_DEV_PATH/tools
NSENGINE_DEV_PATH="$(dirname -- $NSMK_PATH)"

NSENGINE_BUILD_DIR="build"
NSENGINE_BUILD_PATH="$NSENGINE_DEV_PATH/$NSENGINE_BUILD_DIR"

# sub files
source $NSMK_PATH/nsmk_git.sh
source $NSMK_PATH/nsmk_compile.sh

nsmk_cmd_configure() {
  if [ $# -ne 0 ]; then
    echo "nsmk-configure: invalid number of arguments ($#), expected 0"
    echo "Usage: nsmk configure"
    return 1
  fi
  mkdir -p $NSENGINE_BUILD_DIR &&
  cd $NSENGINE_BUILD_DIR &&
  cmake -GNinja ..
}

nsmk_cmd_vim() {
  if [ $# -ne 0 ]; then
    echo "nsmk-vim: invalid number of arguments ($#), expected 0"
    echo "Usage: nsmk vim"
    return 1
  fi
  nvim
}

nsmk_cmd_run() {
  if [ $# -ne 0 ]; then
    echo "nsmk-run: invalid number of arguments ($#), expected 0"
    echo "Usage: nsmk run"
    return 1
  fi
  nsmk_compile_all &&
  cd $NSENGINE_BUILD_DIR &&
  testbed/testbed
}

nsmk_cmd_debug() {
  if [ $# -ne 0 ]; then
    echo "nsmk-debug: invalid number of arguments ($#), expected 0"
    echo "Usage: nsmk debug"
    return 1
  fi
  nsmk_compile_all &&
  cd $NSENGINE_BUILD_DIR &&
  gdb testbed/testbed
}

nsmk_cmd_test() {
  if [ $# -ne 0 ]; then
    echo "nsmk-test: invalid number of arguments ($#), expected 0"
    echo "Usage: nsmk test"
    return 1
  fi
  nsmk_compile_all
  cd $NSENGINE_BUILD_DIR
  tests/tests
}

nsmk_cmd_cleanall() {
  if [ $# -ne 0 ]; then
    echo "nsmk-cleanall: invalid number of arguments ($#), expected 0"
    echo "Usage: nsmk cleanall"
    return 1
  fi
  rm -rf $NSENGINE_BUILD_DIR
}

nsmk_cmd_clean() {
  if [ $# -ne 0 ]; then
    echo "nsmk-clean: invalid number of arguments ($#), expected 0"
    echo "Usage: nsmk clean"
    return 1
  fi
  cd $NSENGINE_BUILD_DIR > /dev/null 2> /dev/null &&
  ninja clean
}

# main function
nsmk_main() {
  cd $NSENGINE_DEV_PATH

  if [ $NSMK_ARGC -eq 0 ]; then
    nsmk_compile_all
  elif [ "${NSMK_ARGV[0]}" = "git" ]; then
    nsmk_cmd_git "${NSMK_ARGV[@]:1}"
  elif [ "${NSMK_ARGV[0]}" = "configure" ]; then
    nsmk_cmd_configure "${NSMK_ARGV[@]:1}"
  elif [ "${NSMK_ARGV[0]}" = "vim" ]; then
    nsmk_cmd_vim "${NSMK_ARGV[@]:1}"
  elif [ "${NSMK_ARGV[0]}" = "run" ]; then
    nsmk_cmd_run "${NSMK_ARGV[@]:1}"
  elif [ "${NSMK_ARGV[0]}" = "debug" ]; then
    nsmk_cmd_debug "${NSMK_ARGV[@]:1}"
  elif [ "${NSMK_ARGV[0]}" = "test" ]; then
    nsmk_cmd_test "${NSMK_ARGV[@]:1}"
  elif [ "${NSMK_ARGV[0]}" = "cleanall" ]; then
    nsmk_cmd_cleanall "${NSMK_ARGV[@]:1}"
  elif [ "${NSMK_ARGV[0]}" = "clean" ]; then
    nsmk_cmd_clean "${NSMK_ARGV[@]:1}"
  else
    echo "Usage: nsmk <command>"
    return 1
  fi
}

# call main
if [ $NSMK_IS_MAINFILE -eq 1 ]; then
  nsmk_main
fi
