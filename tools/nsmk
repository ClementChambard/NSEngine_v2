#!/bin/bash

# get the executable's path
NSMK_PATH="$(dirname -- "${BASH_SOURCE[0]}")"

# executable is in $NSENGINE_DEV_PATH/tools
NSENGINE_DEV_PATH="$(dirname -- $NSMK_PATH)"

cd $NSENGINE_DEV_PATH

main() {
  cd build > /dev/null 2> /dev/null
  if [ $? -ne 0 ]; then
    echo -e "\e[31mNOT CONFIGURED\e[0m"
    exit 1
  fi
  cmake .. && ninja

  if [ $? -ne 0 ]; then
    echo -e "\e[31mCOMPILING ERROR\e[0m"
    exit 1
  else
    echo -e "\e[33mCOMPILING SUCCESS\e[0m"
  fi

  cd ..
  ./tools/post-build.sh

  if [ $? -ne 0 ]; then
    echo -e "\e[31mPOSTBUILD ERROR\e[0m"
    exit $?
  else
    echo -e "\e[33mPOSTBUILD SUCCESS\e[0m"
  fi
}

if [ $# -gt 1 ]; then
  echo "Invalid number of args"
  exit 1
fi

if [ $# -eq 0 ]; then
  main
elif [ $# -eq 1 ]; then

  if [ "$1" = "configure" ]; then
    mkdir -p build && cd build && cmake -GNinja ..
    exit $?
  elif [ "$1" = "log" ]; then
    cat build/console.log
    exit $?
  elif [ "$1" = "vimlog" ]; then
    nvim build/console.log
    exit $?
  elif [ "$1" = "vim" ]; then
    nvim
    exit $?
  elif [ "$1" = "edit" ]; then
    nvim tools/nsmk
    exit $?
  elif [ "$1" = "run" ]; then
    main
    cd build
    testbed/testbed
    exit $?
  elif [ "$1" = "test" ]; then
    main
    cd build
    tests/tests
    exit $?
  elif [ "$1" = "cleanall" ]; then
    rm -rf build
    exit $?
  elif [ "$1" = "clean" ]; then
    cd build > /dev/null 2> /dev/null && ninja clean && rm -rf assets
    exit $?
  fi

fi
